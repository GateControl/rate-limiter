version: '3.8'
services:
  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis-storage:/data
  influxdb:
    image: influxdb:2.7
    ports:
      - "8086:8086"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8086/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: my-user
      DOCKER_INFLUXDB_INIT_ORG: my-org
      DOCKER_INFLUXDB_INIT_BUCKET: rate_limiter
      DOCKER_INFLUXDB_INIT_PASSWORD: ${DOCKER_INFLUXDB_INIT_PASSWORD}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
    volumes:
      - influxdb-storage:/var/lib/influxdb2
  app:
    env_file:
      - .env
    image: gatecontrol/rate-limiter:latest
    ports:
      - "8080:8080"
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: "6379"
      INFLUX_URL: http://influxdb:8086
      INFLUX_TOKEN: ${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
      ADMIN_API_KEY: ${ADMIN_API_KEY}
    depends_on:
      - redis
      - influxdb

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - influxdb
    environment:
      INFLUX_URL: http://influxdb:8086
      INFLUX_TOKEN: ${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards

volumes:
  grafana-storage:
  redis-storage:
  influxdb-storage:
